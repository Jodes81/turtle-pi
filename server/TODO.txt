=====================================
=====================================
=====            TO DO          =====
=====================================
=====================================

Server
======
 - See server/modules/programs.js > programNotFound(), runProgram(), deleteProgram()
 - On all WebSockets disconnected: shut down turtle: stop cmd execution, motors, etc. Complication: some commands
        will be intended to maintain state on exit: e.g. LEDs
 - On second connection: disconnect first & revert to off state


Client
======
 - CmdEditor: play & stop buttons
 - Joystick arrows & motor control

Both
====
 - Timeout: switch off everything
 - Archive area+buttons


=====================================
=====================================
=====   Refactoring Thoughts    =====
=====================================
=====================================

Server
======
 - REFACTOR...
    - DRY Commands
 - DB: local cache of buttons object?
 - async/await/Promise

Client
======
 - REFACTOR...
    - UNWEBIFY CmdButton/CmdButtman/CmdEditor/Blockly/ServerConn


Both
====
 - REFACTOR EVERYTHING. What a fucking mess; Asynchronous hell, no tests, blurred responsibilities... not 
        DRY. Cross client/server wetness. Also see Client/Server REFACTOR
 - Unify message names. Request/Response/Broadcast? 

=====================================
=====================================
===== FRAMEWORKS to investigate =====
=====================================
=====================================


===== Others =====
==================
 - MEAN - 
 - express-generator - 
 - mongodb - 
 - Derby


===== LoopBack / ChangeStream =====
===================================

 - Loopback is all about *models*: https://loopback.io/doc/en/lb3/LoopBack-core-concepts.html
 - hooks, validation, REST/CRUD, persistance, 
 - Real time with Socket.io and Angular live set: https://loopback.io/doc/en/lb3/Realtime-socket-io.html

